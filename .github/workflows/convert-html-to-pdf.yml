name: Convert HTML to PDF

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # This allows manual triggering

jobs:
  convert-html-to-pdf:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Puppeteer
      run: npm install puppeteer
      
    - name: Create PDF output directory
      run: mkdir -p pdf-output
      
    - name: Convert HTML files to PDF
      run: |
        node << 'EOF'
        const puppeteer = require('puppeteer');
        const fs = require('fs');
        const path = require('path');
        
        async function convertHTMLtoPDF() {
          const browser = await puppeteer.launch({
            headless: true,
            args: ['--no-sandbox', '--disable-setuid-sandbox']
          });
          
          function findHTMLFiles(dir, fileList = []) {
            const files = fs.readdirSync(dir);
            files.forEach(file => {
              const filePath = path.join(dir, file);
              if (fs.statSync(filePath).isDirectory() && !file.startsWith('.')) {
                findHTMLFiles(filePath, fileList);
              } else if (path.extname(file).toLowerCase() === '.html') {
                fileList.push(filePath);
              }
            });
            return fileList;
          }
          
          const htmlFiles = findHTMLFiles('.');
          console.log(`Found ${htmlFiles.length} HTML files`);
          
          let converted = 0;
          let failed = 0;
          
          for (const htmlFile of htmlFiles) {
            try {
              const page = await browser.newPage();
              
              const htmlContent = fs.readFileSync(htmlFile, 'utf8');
              await page.setContent(htmlContent, { waitUntil: 'networkidle0' });
              
              const relativePath = path.relative('.', htmlFile);
              const pdfName = relativePath.replace(/\.html$/i, '.pdf').replace(/[/\\]/g, '_');
              const pdfPath = path.join('pdf-output', pdfName);
              
              await page.pdf({
                path: pdfPath,
                format: 'A4',
                margin: { top: '20mm', right: '20mm', bottom: '20mm', left: '20mm' },
                printBackground: true
              });
              
              console.log(`✓ Converted: ${relativePath} → ${pdfName}`);
              await page.close();
              converted++;
              
            } catch (error) {
              console.log(`✗ Error converting ${htmlFile}: ${error.message}`);
              failed++;
            }
          }
          
          await browser.close();
          console.log(`\nConversion complete! ${converted} successful, ${failed} failed`);
        }
        
        convertHTMLtoPDF().catch(console.error);
        EOF
        
    - name: Upload PDF artifacts
      uses: actions/upload-artifact@v4
      with:
        name: converted-pdfs-${{ github.run_number }}
        path: pdf-output/
        retention-days: 30
